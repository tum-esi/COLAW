[General]
sim-time-limit = 6000s
debug-on-errors = true
print-undisposed = true

cmdenv-express-mode = true
cmdenv-autoflush = true

# Start SUMO GUI
*.traci.launcher.sumo = "sumo-gui"

#**.scalar-recording = false
#**.vector-recording = false

**.scalar-recording = true
**.vector-recording = true

*.traci.core.version = -1
*.traci.launcher.typename = "PosixLauncher"
#*.traci.launcher.sumocfg = "../../extern/veins/examples/veins/erlangen.sumo.cfg"
# separate random number generator for vehicle penetration rate
num-rngs = 2
*.traci.mapper.rng-0 = 1

[Config veins]
network = artery.veins.World

*.traci.launcher.sumocfg = "/home/pbarabas/Downloads/Bologna_small-0.29.0/pasubio/run.sumo.cfg"


*.playgroundSizeX = 4000m
*.playgroundSizeY = 4000m
*.playgroundSizeZ = 50m

*.connectionManager.maxInterfDist = 1500m
*.connectionManager.sendDirect = true
*.connectionManager.coreDebug = false

#*.withObstacles = true
#*.obstacles.debug = true
#*.obstacles.obstacles = xmldoc("config.xml", "//AnalogueModel[@type='SimpleObstacleShadowing']/obstacles")

*.node[*].nic.mac1609_4.txPower = 20mW
*.node[*].nic.phy80211p.decider = xmldoc("config.xml")
*.node[*].nic.phy80211p.analogueModels = xmldoc("config.xml")

*.node[*].applType = "artery.veins.ApplicationLayer"
*.node[*].appl.middleware.updateInterval = 0.1s
*.node[*].appl.middleware.datetime = "2013-06-01 12:35:00"
*.node[*].appl.middleware.services = xmldoc("services.xml")

*.node[*].appl.middleware.CA.transmission.result-recording-modes = all
*.node[*].appl.middleware.CA.reception.result-recording-modes = all

[Config veins_obstacles]
network = artery.veins.World

*.traci.launcher.sumocfg = "/home/pbarabas/Downloads/Bologna_small-0.29.0/pasubio/run_obstacles.sumo.cfg"
#*.traci.core.startTime = 2500 s

*.playgroundSizeX = 4000m
*.playgroundSizeY = 4000m
*.playgroundSizeZ = 50m

*.connectionManager.maxInterfDist = 1500m
*.connectionManager.sendDirect = true
*.connectionManager.coreDebug = false

*.withObstacles = true
#*.obstacles.debug = true
*.obstacles.obstacles = xmldoc("config_obstacles.xml", "//AnalogueModel[@type='SimpleObstacleShadowing']/obstacles")

# Changed from 126mW (???)
*.node[*].nic.mac1609_4.txPower = 20mW
*.node[*].nic.phy80211p.decider = xmldoc("config_obstacles.xml")
*.node[*].nic.phy80211p.analogueModels = xmldoc("config_obstacles.xml")

*.node[*].applType = "artery.veins.ApplicationLayer"
# How often the services are triggered. Currently: Every 10s the vehicles send out a location generation request
*.node[*].appl.middleware.updateInterval = 0.1s
*.node[*].appl.middleware.datetime = "2013-06-01 12:35:00"
*.node[*].appl.middleware.services = xmldoc("services.xml")


[Config inet]
network = artery.inet.World

*.node[*].wlan[*].typename = "VanetNic"
*.node[*].wlan[*].radio.channelNumber = 180
*.node[*].wlan[*].radio.carrierFrequency = 5.9 GHz
*.node[*].wlan[*].radio.transmitter.power = 200 mW

*.node[*].middleware.updateInterval = 120s
*.node[*].middleware.datetime = "2013-06-01 12:35:00"
*.node[*].middleware.services = xmldoc("services.xml")


[Config inet_mco]
extends = inet
*.node[*].numRadios = 2
*.node[*].wlan[1].radio.channelNumber = 176
*.node[*].middleware.services = xmldoc("services-mco.xml")
*.node[*].middleware.mcoPolicy = xml("<mco default=\"CCH\"><application id=\"16480\" channel=\"176\" /></mco>")


[Config inet_security]
extends = inet
*.node[*].vanetza[*].security.typename = "SecurityEntity"


[Config inet_multiple_vehicle_types]
extends = inet
# see above for configuration of mapper's random number generator (rng)
seed-1-mt = ${seed=0, 23, 42, 1337, 0815, 4711}
*.traci.mapper.typename = "traci.MultiTypeModuleMapper"
*.traci.mapper.vehicleTypes = xmldoc("vehicles.xml")


[Config inet_nakagami]
extends = inet
*.radioMedium.pathLossType = "VanetNakagamiFading"


[Config envmod]
extends = inet
network = artery.envmod.World
**.identityRegistryModule = "idRegistry"
*.traci.mapper.vehicleType = "artery.envmod.Car"
*.environmentModel.preselectionMethod = ${preseletion=1,2,3}
*.environmentModel.traciModule = "traci"
*.environmentModel.nodeMobilityModule = ".mobility"
*.node[*].middleware.services = xmldoc("services-envmod.xml")
*.node[*].environmentModel.sensors = xmldoc("sensors.xml")


[Config inet_rsu]
extends = inet
*.numRoadSideUnits = 2
*.rsu[*].middleware.datetime = "2013-06-01 12:35:00"
*.rsu[*].middleware.services = xml("<services />")
*.rsu[*].mobility.initialZ = 10m
*.rsu[0].mobility.initialX = 300m
*.rsu[0].mobility.initialY = 500m
*.rsu[1].mobility.initialX = 2000m
*.rsu[1].mobility.initialY = 1000m


[Config veins_rsu]
extends = veins
*.numRoadSideUnits = 2

*.rsu[*].appl.middleware.updateInterval = 0.1s
*.rsu[*].appl.middleware.datetime = "2013-06-01 12:35:00"
*.rsu[*].appl.middleware.services = xml("<services />")

*.rsu[*].nic.mac1609_4.txPower = 126mW
*.rsu[*].nic.phy80211p.decider = xmldoc("config.xml")
*.rsu[*].nic.phy80211p.analogueModels = xmldoc("config.xml")

*.rsu[*].mobility.z = 10

*.rsu[0].mobility.x = 300
*.rsu[0].mobility.y = 500
*.rsu[1].mobility.x = 2000
*.rsu[1].mobility.y = 1000


[Config inet_antenna_offset]
extends = inet

*.node[*].withAntennaMobility = true
*.node[*].antennaMobility.offsetX = -2.5 m


[Config delayed_vehicle_insertion]
description = "insert a bulk of vehicles with individual delays"
extends = inet
*.traci.core.startTime = 120 s
*.traci.nodes.typename = "InsertionDelayNodeManager"
